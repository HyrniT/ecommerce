{{!-- views/partials/admin/product-admin.hbs --}}

<h3 class="mt-5">Products</h3>
<div class="container mt-1">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Category</th>
                <th>Quantity</th>
                <th>Image</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {{#each products}}
            <tr id="productRow-{{id}}">
                <td>{{name}}</td>
                <td style="max-width: 600px; overflow: hidden; text-overflow: ellipsis;">{{desc}}</td>
                <td>{{price}}</td>
                <td>{{category_name}}</td>
                <td>{{quantity}}</td>
                <td><img src="{{img}}" alt="{{name}}" class="img-fluid" style="max-width: 100px;"></td>
                <td>
                    <button class="btn btn-primary" onclick="editProduct('{{id}}')">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn btn-danger" onclick="deleteProduct('{{id}}')">
                        <i class="fas fa-trash"></i>
                    </button>
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</div>

<nav>
    <ul class="pagination pagination-sm">
    </ul>
</nav>

<div class="container mt-3 collapse" id="editProductFormContainer">
    <h5>Edit product</h5>
    <div class="card card-body">
        <form id="editProductForm" enctype="multipart/form-data">
            <div class="mb-3">
                <label for="editName" class="form-label">Name:</label>
                <input type="text" class="form-control" id="editName" name="name" required>
            </div>

            <div class="mb-3">
                <label for="editDesc" class="form-label">Description:</label>
                <input type="text" class="form-control" id="editDesc" name="desc">
            </div>

            <div class="mb-3">
                <label for="editPrice" class="form-label">Price:</label>
                <input type="text" class="form-control" id="editPrice" name="price" required>
            </div>

            <div class="mb-3">
                <label for="editCategoryId" class="form-label">Category:</label>
                <select class="form-select" id="editCategoryId" name="categoryId" required>
                    {{#each categories}}
                    <option value="{{id}}">{{name}}</option>
                    {{/each}}
                </select>
            </div>

            <div class="mb-3">
                <label for="editQuantity" class="form-label">Quantity:</label>
                <input type="text" class="form-control" id="editQuantity" name="price" required>
            </div>

            <div class="mb-3">
                <label for="editImage" class="form-label">Image:</label>
                <input type="file" class="form-control" id="editImage" name="image" accept="image/*">
            </div>

            <button type="submit" class="btn btn-primary">Update</button>
        </form>
    </div>
</div>

<p class="mt-3">
    <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="collapse"
        data-bs-target="#addProductFormContainer" aria-expanded="false" aria-controls="addProductFormContainer">
        Add new product
    </button>
</p>
<div class="container mt-3 collapse" id="addProductFormContainer">
    <div class="card card-body">
        <form id="addProductForm" enctype="multipart/form-data">
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <input type="text" class="form-control" id="name" name="name" required>
            </div>

            <div class="mb-3">
                <label for="desc" class="form-label">Description:</label>
                <input type="text" class="form-control" id="desc" name="desc">
            </div>

            <div class="mb-3">
                <label for="price" class="form-label">Price:</label>
                <input type="number" class="form-control" id="price" name="price" required>
            </div>

            <div class="mb-3">
                <label for="categoryId" class="form-label">Category:</label>
                <select class="form-select" id="categoryId" name="categoryId" required>
                    {{#each categories}}
                    <option value="{{id}}">{{name}}</option>
                    {{/each}}
                </select>
            </div>

            <div class="mb-3">
                <label for="quantity" class="form-label">Quantity:</label>
                <input type="number" class="form-control" id="quantity" name="quantity" required>
            </div>

            <div class="mb-3">
                <label for="image" class="form-label">Image:</label>
                <input type="file" class="form-control" id="image" name="image" accept="image/*">
            </div>

            <button type="submit" class="btn btn-primary">Add</button>
        </form>
    </div>
</div>
<script>
    $(document).ready(function () {
        const totalPages = {{ totalPages }};
        const currentPage = {{ currentPage }};

        const pages = [];

        for (let i = 1; i <= totalPages; i++) {
            pages.push(i);
        }

        pages.forEach(page => {
            const pagination = `
            <li class="page-item ${page === currentPage ? 'active' : ''}">
                <a class="page-link" href="javascript:void(0);" onclick="loadPage(${page})">${page}</a>
            </li>
            `;

            $('.pagination').append(pagination);
        });
    });

    function loadPage(page) {
        $.ajax({
            url: `/admin/product?page=${page}`,
            method: 'GET',
            dataType: 'html',
            success: function (data) {
                $('#content').html(data);
            },
            error: function (xhr, status, error) {
                console.error('Error:', error);
                alert('An error occurred while processing your request.');
            }
        });
    }

    function editProduct(productId) {
        const name = $(`#productRow-${productId} td:nth-child(1)`).text();
        const desc = $(`#productRow-${productId} td:nth-child(2)`).text();
        const price = $(`#productRow-${productId} td:nth-child(3)`).text();
        const categoryName = $(`#productRow-${productId} td:nth-child(4)`).text();
        const quantity = $(`#productRow-${productId} td:nth-child(5)`).text();

        $('[id^="productRow-"]').removeClass('table-primary');

        $('#editName').val(name);
        $('#editDesc').val(desc);
        $('#editPrice').val(price);
        $('#editCategoryId option').filter(function () {
            return $(this).text() === categoryName;
        }).prop('selected', true);
        $('#editQuantity').val(quantity);

        $(`#productRow-${productId}`).addClass('table-primary');

        $('#editProductFormContainer').attr('productId', productId);

        $('#editProductFormContainer').collapse('show');
    }

    $('#editProductForm').submit(function (event) {
        event.preventDefault();

        const productId = $('#editProductFormContainer').attr('productId');
        const formData = new FormData();
        formData.append('id', productId);
        formData.append('name', $('#editName').val());
        formData.append('desc', $('#editDesc').val());
        formData.append('price', $('#editPrice').val());
        formData.append('categoryId', $('#editCategoryId').val());
        formData.append('quantity', $('#editQuantity').val());
        formData.append('image', $('#editImage')[0].files[0]);

        fetch('/admin/edit-product', {
            method: 'POST',
            body: formData
        })
            .then(response => response.text())
            .then((data) => {
                $('#content').html(data);
                alert('Product updated successfully.');
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while processing your request.');
            });
    });

    function deleteProduct(productId) {
        const confirmDelete = window.confirm("Are you sure you want to delete this product?");

        if (confirmDelete) {
            fetch(`/admin/delete-product?id=${productId}`, {
                method: 'GET'
            })
                .then(response => {
                    if (response.status === 200) {
                        const productRow = $(`#productRow-${productId}`);
                        productRow.remove();
                        alert('Product deleted successfully.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while processing your request.');
                });
        }
    }

    $("#addProductForm").submit(function (event) {
        event.preventDefault();

        const formData = new FormData();
        formData.append('name', $('#name').val());
        formData.append('desc', $('#desc').val());
        formData.append('price', $('#price').val());
        formData.append('categoryId', $('#categoryId').val());
        formData.append('quantity', $('#quantity').val());
        formData.append('image', $('#image')[0].files[0]);

        fetch('/admin/add-product', {
            method: 'POST',
            body: formData
        })
            .then(response => response.text())
            .then((data) => {
                $('#content').html(data);
                alert('Product added successfully.');
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while processing your request.');
            });
    });
</script>